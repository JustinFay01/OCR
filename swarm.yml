services:
  api:
    image: justinfay501/ocr-api:latest # Image name
    # Swarm does not support build because it has mutliple nodes
    # meaning it pulls the image from the registry
    # build:
    # context: .
    # dockerfile: Dockerfile # Path to the Dockerfile which will be used to build the images

    # REVIST WITH TRAEFIK
    # ports:
    #   - "8080:8080"
    volumes:
      - ./ocr_storage:/var/lib/ocr_storage
    environment:
      DI_KEY: ${DI_KEY}
      DI_ENDPOINT: ${DI_ENDPOINT}
      # Can't use the docker secret directly in the environment variable
      # Because it will just use the file path
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      OCR_STORAGE_PATH: /var/lib/ocr_storage
    deploy: # Rolling release (Blue Green Deployment)
      update_config:
        order: start-first
    depends_on:
      - postgres # Will force the postgres container to start before this one

  postgres: # DNS resolves to this container name NOT the image or `container_name`
    image: postgres
    # REVIST WITH TRAEFIK
    # ports:
    #   - "6969:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    secrets:
      - POSTGRES_PASSWORD
    environment:
      POSTGRES_DB: ocr_db # Database name
      POSTGRES_USER: admin
      # POSTGRES image as specific implementation to read the password from the file
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD

secrets:
  POSTGRES_PASSWORD:
    # File is for compose external is for swarm
    # file: ./secrets/POSTGRES_PASSWORD.txt
    external: true
volumes:
  pg_data:
  ocr_storage:
