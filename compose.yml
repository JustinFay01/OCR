services:
  web:
    image: justinfay501/ocr-api:latest # Image name
    build:
      context: .
      dockerfile: Dockerfile # Path to the Dockerfile which will be used to build the images
    depends_on:
      - postgres # Will force the postgres container to start before this one
    ports:
      - "8080:8080"
    volumes:
      - ./ocr_storage:/var/lib/ocr_storage
    secrets:
      - DI_KEY
      - DI_ENDPOINT
      - POSTGRES_PASSWORD
    environment:
      DI_KEY: /run/secrets/DI_KEY
      DI_ENDPOINT: /run/secrets/DI_ENDPOINT
      POSTGRES_PASSWORD: /run/secrets/POSTGRES_PASSWORD
      OCR_STORAGE_PATH: /var/lib/ocr_storage
  postgres: # DNS resolves to this container name NOT the image or `container_name`
    image: postgres 
    ports:
      - "5432:5432"
    volumes:  
      - ./pg_data:/var/lib/postgresql/data
    secrets:
      - POSTGRES_PASSWORD
    environment:
      POSTGRES_DB: ocr_db # Database name
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: /run/secrets/POSTGRES_PASSWORD
    
secrets:
    DI_KEY:
        file: ./secrets/DI_KEY.txt
        #external: true
    DI_ENDPOINT:
        file: ./secrets/DI_ENDPOINT.txt
        #external: true
    POSTGRES_PASSWORD:
        file: ./secrets/POSTGRES_PASSWORD.txt
        #external: true

volumes:
    pg_data:
    ocr_storage: